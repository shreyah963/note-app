name: Infrastructure Pipeline

on:
  push:
    paths:
      - 'terraform/**'
      - '.github/workflows/infrastructure.yml'
  pull_request:
    paths:
      - 'terraform/**'

permissions:
  contents: read
  security-events: write

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform -chdir=terraform init

      - name: Validate Terraform Configuration
        run: |
          cd terraform
          terraform validate
          terraform fmt -check
        continue-on-error: true

      - name: Check for Terraform Security Issues
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          working-directory: terraform
          format: sarif
          out: tfsec.sarif
        continue-on-error: true

      - name: Upload tfsec results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: terraform/tfsec.sarif
        continue-on-error: true

      - name: Run Checkov (additional IaC security scan)
        uses: bridgecrewio/checkov-action@master
        with:
          directory: terraform
          framework: terraform
          output_format: sarif
          output_file_path: checkov_results.sarif
          soft_fail: true
        continue-on-error: true

      - name: Upload Checkov results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: terraform/checkov_results.sarif
        continue-on-error: true

      - name: Check for Secrets in Infrastructure Code
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./terraform
          base: HEAD
          head: HEAD~1
        continue-on-error: true

      - name: Validate AWS IAM Policies
        run: |
          cd terraform
          for file in $(find . -name "*.json" -o -name "*.tf" | grep -E "(policy|iam)"); do
            echo "Validating IAM policy in $file"
            if [[ $file == *.json ]]; then
              aws iam validate-policy-document --policy-document file://$file || echo "Policy validation failed for $file"
            fi
          done

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Verify AWS credentials
        run: |
          aws sts get-caller-identity
          echo "AWS credentials configured successfully"

      - name: Terraform Plan
        run: terraform -chdir=terraform plan

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform -chdir=terraform apply -auto-approve 